include .env

test_data=`pwd`/test_data
dir_iai=$(test_data)/iai
dir_tes=$(test_data)/tes

down:
	docker-compose $@
logs:
	docker-compose $@ -f
S=
up:
	docker-compose $@ -d $(S)
restart:
	docker-compose $@ $(S)
test_iai:
	echo "IAI TEST"
	for f in $(shell ls ${dir_iai}); do \
		curl -i -X POST -H "Content-Type: multipart/form-data" -F "image=@$(dir_iai)/$${f}" http://localhost:$(PORT_IAI)/model; \
	done

test_ner:
	@curl -d '{"x":["–°–∞–Ω–∫—Ç-–ü–µ—Ç–µ—Ä–±—É—Ä–≥ ‚Äì —Ä—É—Å—Å–∫–∏–π –ø–æ—Ä—Ç–æ–≤—ã–π –≥–æ—Ä–æ–¥ –Ω–∞ –ø–æ–±–µ—Ä–µ–∂—å–µ –ë–∞–ª—Ç–∏–π—Å–∫–æ–≥–æ –º–æ—Ä—è, –∫–æ—Ç–æ—Ä—ã–π –≤ —Ç–µ—á–µ–Ω–∏–µ –¥–≤—É—Ö –≤–µ–∫–æ–≤ —Å–ª—É–∂–∏–ª —Å—Ç–æ–ª–∏—Ü–µ–π –†–æ—Å—Å–∏–π—Å–∫–æ–π –∏–º–ø–µ—Ä–∏–∏."]}'\
	 -H "Content-Type: application/json" -X POST http://localhost:$(PORT_NER)/model

test_tes:
	echo "TEST TES"
	for f in $(shell ls ${dir_tes}); do \
			curl -i -X POST -H "Content-Type: multipart/form-data" -F "image=@$(dir_tes)/$${f}" http://localhost:$(PORT_TES)/model; \
		done

test_tr:
	echo "TEST TR"
	curl -d '{"x":["–î–µ–ª—é—Å—å —Å –≤–∞–º–∏ —Ä–µ—Ü–µ–ø—Ç–æ–º –æ—á–µ–Ω—å –±—ã—Å—Ç—Ä–æ–≥–æ,–≤–∫—É—Å–Ω–æ–≥–æ –∏ –ø–æ–ª–µ–∑–Ω–æ–≥–æ –∑–∞–≤—Ç—Ä–∞–∫–∞ü§§ ¬´–¢–û–°–¢–´ –° –ì–£–ê–ö–ê–ú–û–õ–ï –ò –Ø–ô–¶–û–ú-–ü–ê–®–û–¢¬ªüòã –ò–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç—ã:–î–ª—è –≥—É–∞–∫–∞–º–æ–ª–µ:–°–ø–µ–ª—ã–π –∞–≤–æ–∫–∞–¥–æ-1—à—Ç –ü–æ–º–∏–¥–æ—Ä-1—à—Ç –ó–µ–ª–µ–Ω—å (–∫–∏–Ω–∑–∞) –õ–∏–º–æ–Ω–Ω—ã–π —Å–æ–∫.–°–æ–ª—å,–ø–µ—Ä–µ—Ü,–ø–∞–ø—Ä–∏–∫–∞ –∏ —Å—É—à–µ–Ω–Ω—ã–π —á–µ—Å–Ω–æ–∫(–º–æ–∂–Ω–æ —Å–≤–µ–∂–∏–π)–ü—Ä–∏–≥–æ—Ç–æ–≤–ª–µ–Ω–∏–µ:–ê–≤–æ–∫–∞–¥–æ –æ—á–∏—Å—Ç–∏—Ç—å –∏ —Ä–∞–∑–º—è—Ç—å –≤–∏–ª–∫–æ–π,–ø–æ–º–∏–¥–æ—Ä –Ω–∞—Ä–µ–∑–∞—Ç—å –∫—É–±–∏–∫–æ–º –∏ –∫–∏–Ω–∑—É –º–µ–ª–∫–æ –Ω–∞—Ä–µ–∑–∞—Ç—å. –í—Å–µ —Å–º–µ—à–∞—Ç—å,–¥–æ–±–∞–≤–∏—Ç—å —Å–æ–ª—å,–ø–µ—Ä–µ—Ü,–ø–∞–ø—Ä–∏–∫—É,—á–µ—Å–Ω–æ–∫ –∏ –ª–∏–º–æ–Ω–Ω—ã–π —Å–æ–∫. –í—Å–µ —Ö–æ—Ä–æ—à–æ –ø–µ—Ä–µ–º–µ—à–∞—Ç—å –∏ –≤—ã–ª–æ–∂–∏—Ç—å –Ω–∞ –ø–æ–¥–∂–∞—Ä–µ–Ω–Ω—ã–µ —Ç–æ—Å—Ç—ã.–ì–æ—Ç–æ–≤–∏–º —è–π—Ü–æ-–ø–∞—à–æ—Ç:–í –∫–∏–ø—è—â—É—é –≤–æ–¥—É –¥–æ–±–∞–≤–ª—è–µ–º 1 —Å—Ç.–ª. —É–∫—Å—É—Å–∞,–¥–µ–ª–∞–µ–º –ª–æ–∂–∫–æ–π –≤–æ—Ä–æ–Ω–∫—É –∏ –≤ —ç—Ç—É –≤–æ—Ä–æ–Ω–∫—É –±—ã—Å—Ç—Ä–æ,–Ω–æ –æ—á–µ–Ω—å –∞–∫–∫—É—Ä–∞—Ç–Ω–æ –≤–ª–∏–≤–∞–µ–º —è–π—Ü–æ,—É–º–µ–Ω—å—à–∞–µ–º –æ–≥–æ–Ω—å –¥–æ –º–∏–Ω–∏–º—É–º–∞ –∏ –≤–∞—Ä–∏–º 2 –º–∏–Ω—É—Ç—ã. –î–æ—Å—Ç–∞—ë–º —à—É–º–æ–≤–∫–æ–π –∏ –∞–∫–∫—É—Ä–∞—Ç–Ω–æ –≤—ã–∫–ª–∞–¥—ã–≤–∞–µ–º –Ω–∞ –Ω–∞—à–∏ —Ç–æ—Å—Ç—ã —Å –≥—É–∞–∫–∞–º–æ–ª–µ.–í–∫—É—Å–Ω–µ–π—à–∏–π –∏ –Ω–µ–∂–Ω—ã–π –∑–∞–≤—Ç—Ä–∞–∫ –≥–æ—Ç–æ–≤.–û–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –ø—Ä–∏–≥–æ—Ç–æ–≤—å—Ç–µ.–ü—Ä–∏—è—Ç–Ω–æ–≥–æ –∞–ø–ø–µ—Ç–∏—Ç–∞"]}' -H "Content-Type: application/json" -X POST http://localhost:$(PORT_TR)/model

test: test_iai test_ner test_tes test_tr


#download:
#	# python -m deeppavlov download ner_ontonotes_bert_mult
#	docker run --rm -ti -v `pwd`/src:/root/.deeppavlov --entrypoint bash $(SRV)